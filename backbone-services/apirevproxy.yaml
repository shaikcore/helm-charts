---
# Source: apirevproxy/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: apirevproxy
  namespace: middleware
data:
  default.conf: |
    server {
        listen 80 default_server;
        server_name _;
        charset utf-8;
        server_tokens off;
        add_header X-Frame-Options "SAMEORIGIN";
        proxy_intercept_errors on;
        # Rules could be optimized but as is it could help others to understand and customise them.
        error_page 500 501 502 503 504 /50x.json;
        location /50x.json {
            root /etc/nginx/html;
            internal;
        }
        location * {
            if ($request_method = 'OPTIONS') {
                # CORS configuration, from http://enable-cors.org/server_nginx.html
                add_header 'Access-Control-Allow-Origin' '*';
                #
                #     Om nom nom cookies
                #
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                #
                # Custom headers and headers various browsers *should* be OK with but aren't
                #
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
                #
                # Tell client that this pre-flight info is valid for 20 days
                #
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            if ($request_method = 'POST') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
            }
            if ($request_method = 'GET') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header X-Frame-Options "SAMEORIGIN";
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
            }
        }
  
        location / {
             proxy_pass http://api:5000/;
             proxy_redirect     off;
             proxy_set_header   Host $host;
             proxy_set_header   X-Real-IP        $http_x_forwarded_for;
             proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
             proxy_set_header   X-Forwarded-Proto https;
        }
        location /adminapi/ {
             proxy_pass http://admin-api:5000/adminapi/;
             proxy_set_header Host $host;
             proxy_set_header X-Real-IP $http_x_forwarded_for;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
             proxy_set_header X-Forwarded-Proto https;
    }
     location /osaasapi/ {
             proxy_pass http://osaas-api:5000/osaasapi/;
             proxy_set_header Host $host;
             proxy_set_header X-Real-IP $http_x_forwarded_for;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
             proxy_set_header X-Forwarded-Proto https;
    }
     location /lbaasapi/ {
             proxy_pass http://lbaas-api:5000/lbaasapi/;
             proxy_set_header Host $host;
             proxy_set_header X-Real-IP $http_x_forwarded_for;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
             proxy_set_header X-Forwarded-Proto https;
    }
    }
---
# Source: apirevproxy/templates/service.yaml
# service.yaml---
apiVersion: v1
kind: Service
metadata:
  name: apirevproxy
  namespace: middleware  
  annotations: 
  labels:
    app: apirevproxy   
spec:
  selector:
    app: apirevproxy    
  ports:
  - name: http
    port: 80
    targetPort: 80
---
# Source: apirevproxy/templates/deployment.yaml
# deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apirevproxy
  namespace: middleware
  labels:
    app: apirevproxy   
spec:
  selector:
    matchLabels:
      app: apirevproxy
  strategy:
    rollingUpdate:
      maxUnavailable: 0     
  replicas: 1
  template:
    metadata:  
      annotations:
        deployment-timestamp: "20220124144507"        
      labels:
        app: apirevproxy            
    spec:          
      containers:    
        - name: apirevproxy
          image: chub.cloud.gov.in/service-cloud/apirevproxy:latest
          imagePullPolicy: IfNotPresent             
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: apirevproxy
              mountPath:  /etc/nginx/conf.d/
                         
          env:                                     
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            
      volumes:
        - name: apirevproxy
          configMap: 
            name: apirevproxy
