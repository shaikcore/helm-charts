{{- define "common.statefulset" -}}
{{- if .Capabilities.APIVersions.Has "apps/v1" }}
apiVersion: apps/v1
{{- else }}
apiVersion: extensions/v1beta1
{{- end }}
kind: StatefulSet
metadata:
  name: {{ template "common.name" . }}
  namespace: {{ .Values.global.namespace }}
  labels:
{{- include "common.labels" . | nindent 4 }}
spec:
{{- if .Capabilities.APIVersions.Has "apps/v1" }}
  selector:
    matchLabels:
      {{- include "common.labels" . | nindent 6 }}
{{- end }}
{{- $persistence := .Values.persistence | default dict -}}
{{- if and (not (hasKey $persistence "enabled")) (eq (.Values.replicas | int) 1) }}
{{- end }}
  replicas: {{ .Values.replicas }}
  serviceName: postgres
  template:
    metadata:
      annotations:
      {{- if not .Values.disableAnnotationTimestamp }}
        deployment-timestamp: "{{ date "20060102150405" .Release.Time }}"
      {{- end }}
      {{- if .Values.additionalAnnotations }}
        {{- tpl  .Values.additionalAnnotations . | nindent 8 }}
      {{- end }}
      labels:
      {{- include "common.labels" . | nindent 8 }}
    spec:
      initContainers:      
      - command:
        - /bin/sh
        - -cx
        - |2

          mkdir -p /niccloud/postgresql/data
          chmod -R 777 /niccloud/postgresql
          find /niccloud/postgresql -mindepth 1 -maxdepth 1 -not -name ".snapshot" -not -name "lost+found" | \
            xargs chown -R 1001:1001
      {{- if .Values.initContainers.postgresPermission.enabled }}
        name: {{ .Values.initContainers.name }}
        image: {{ template "common.image" (dict "Values" $.Values "repository" .Values.initContainers.postgresPermission.image.repository "tag" .Values.initContainers.postgresPermission.image.tag) }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
    {{- if .Values.volumeMounts }}
        volumeMounts:
        {{- tpl .Values.volumeMounts . | nindent 12 }}
    {{- end }}
      {{- end }}
      containers:
        - name: {{ template "common.name" . }}
          image: {{ template "common.image" (dict "Values" $.Values "repository" .Values.image.repository "tag" .Values.image.tag) }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
      {{- if .Values.args }}
          args:
          {{- tpl  .Values.args . | nindent 12 }}
       {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.httpPort }}
              protocol: TCP
    {{- if .Values.volumeMounts }}
          volumeMounts:
        {{- tpl .Values.volumeMounts . | nindent 12 }}
    {{- end }}
          env:
        {{- if .Values.env }}
          {{- tpl  .Values.env . | nindent 12 }}
        {{- end -}}
        {{- if .Values.resources }}
          resources:
            {{- tpl .Values.resources . | nindent 12 }}
        {{- end }}
    {{- if .Values.volumes }}
      volumes:
        {{- tpl .Values.volumes . | nindent 8 }}
    {{- end }}
    {{- with .Values.nodeSelector }}    
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
{{- end -}}
